/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';var e=require("@lexical/react/LexicalCollaborationContext"),f=require("@lexical/react/LexicalComposerContext"),h=require("react"),y=require("@lexical/utils"),G=require("@lexical/yjs"),H=require("lexical"),I=require("react-dom");
function J(b,c,a,d,n,l,r,v){let p=h.useRef(!1),[m,w]=h.useState(d.get(c)),g=h.useMemo(()=>G.createBinding(b,a,c,m,d),[b,a,c,d,m]),t=h.useCallback(()=>{a.connect()},[a]),u=h.useCallback(()=>{try{a.disconnect()}catch(q){}},[a]);h.useEffect(()=>{let {root:q}=g,{awareness:z}=a,A=({status:k})=>{b.dispatchCommand(G.CONNECTED_COMMAND,"connected"===k)},B=k=>{r&&k&&!1===p.current&&K(b,v);p.current=!1},C=()=>{G.syncCursorPositions(g,a)},D=(k,x)=>{x.origin!==g&&G.syncYjsChangesToLexical(g,a,k)};G.initLocalState(a,
n,l,document.activeElement===b.getRootElement());let E=k=>{L(b,g);w(k);d.set(c,k);p.current=!0};a.on("reload",E);a.on("status",A);a.on("sync",B);z.on("update",C);q.getSharedType().observeDeep(D);let P=b.registerUpdateListener(({prevEditorState:k,editorState:x,dirtyLeaves:M,dirtyElements:N,normalizedNodes:O,tags:F})=>{!1===F.has("skip-collab")&&G.syncLexicalUpdateToYjs(g,a,k,x,N,M,O,F)});t();return()=>{!1===p.current&&u();a.off("sync",B);a.off("status",A);a.off("reload",E);z.off("update",C);q.getSharedType().unobserveDeep(D);
d.delete(c);P()}},[g,l,t,u,d,b,c,n,a,r]);let Q=h.useMemo(()=>I.createPortal(h.createElement("div",{ref:q=>{g.cursorsContainer=q}}),document.body),[g]);h.useEffect(()=>b.registerCommand(G.TOGGLE_CONNECT_COMMAND,q=>{void 0!==t&&void 0!==u&&(q?(console.log("Collaboration connected!"),t()):(console.log("Collaboration disconnected!"),u()));return!0},H.COMMAND_PRIORITY_EDITOR),[t,u,b]);return[Q,g]}
function R(b,c,a,d){h.useEffect(()=>y.mergeRegister(b.registerCommand(H.FOCUS_COMMAND,()=>{G.setLocalStateFocus(c,a,d,!0);return!0},H.COMMAND_PRIORITY_EDITOR),b.registerCommand(H.BLUR_COMMAND,()=>{G.setLocalStateFocus(c,a,d,!1);return!0},H.COMMAND_PRIORITY_EDITOR)),[d,b,a,c])}
function S(b,c){let a=h.useMemo(()=>G.createUndoManager(c,c.root.getSharedType()),[c]);h.useEffect(()=>y.mergeRegister(b.registerCommand(H.UNDO_COMMAND,()=>{a.undo();return!0},H.COMMAND_PRIORITY_EDITOR),b.registerCommand(H.REDO_COMMAND,()=>{a.redo();return!0},H.COMMAND_PRIORITY_EDITOR)));return h.useCallback(()=>{a.clear()},[a])}
function K(b,c){b.update(()=>{var a=H.$getRoot();if(a.isEmpty())if(c)switch(typeof c){case "string":var d=b.parseEditorState(c);b.setEditorState(d,{tag:"collaboration"});break;case "object":b.setEditorState(c,{tag:"collaboration"});break;case "function":b.update(()=>{H.$getRoot().isEmpty()&&c(b)},{tag:"collaboration"})}else d=H.$createParagraphNode(),a.append(d),a=document.activeElement,(null!==H.$getSelection()||null!==a&&a===b.getRootElement())&&d.select()},{tag:"history-merge"})}
function L(b,c){b.update(()=>{let d=H.$getRoot();d.clear();d.select()},{tag:"skip-collab"});if(null!=c.cursors&&(b=c.cursors,null!=b&&(c=c.cursorsContainer,null!=c))){b=Array.from(b.values());for(let d=0;d<b.length;d++){var a=b[d].selection;if(a&&null!=a.selections){a=a.selections;for(let n=0;n<a.length;n++)c.removeChild(a[d])}}}}
exports.CollaborationPlugin=function({id:b,providerFactory:c,shouldBootstrap:a,username:d,initialEditorState:n}){let l=e.useCollaborationContext(d),{yjsDocMap:r,name:v,color:p}=l,[m]=f.useLexicalComposerContext();h.useEffect(()=>{l.isCollabActive=!0;return()=>{null==m._parentEditor&&(l.isCollabActive=!1)}},[l,m]);d=h.useMemo(()=>c(b,r),[b,c,r]);let [w,g]=J(m,b,d,r,v,p,a,n);l.clientID=g.clientID;S(m,g);R(m,d,v,p);return w}
